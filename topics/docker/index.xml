<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Awesome Patrick</title>
    <link>https://tramamte.github.io/topics/docker/</link>
    <description>Recent content in docker on Awesome Patrick</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy2019 Patrick Yu. All rights reserved.</copyright>
    <lastBuildDate>Tue, 14 May 2019 12:15:24 +0900</lastBuildDate>
    
	<atom:link href="https://tramamte.github.io/topics/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker 파일로 저장</title>
      <link>https://tramamte.github.io/2019/05/14/dump/</link>
      <pubDate>Tue, 14 May 2019 12:15:24 +0900</pubDate>
      
      <guid>https://tramamte.github.io/2019/05/14/dump/</guid>
      <description>Image dump $ docker save -o dump_file_name.tar IMAGE$ docker load -i dump_file_name.tar Container dump $ docker export CONTAINER_NAME|CONTAINER_ID &amp;gt; dump_file_name.tar$ docker import dump_file_name.tar</description>
    </item>
    
    <item>
      <title>Docker 설정 파일</title>
      <link>https://tramamte.github.io/2019/05/14/config/</link>
      <pubDate>Tue, 14 May 2019 11:04:03 +0900</pubDate>
      
      <guid>https://tramamte.github.io/2019/05/14/config/</guid>
      <description>Docker 데몬의 설정을 변경하기 위해 systemd service 파일을 직접 수정하는 방법은 해당 데몬을 업데이트할 경우 모두 초기화되기 때문에 불편함이 있다. 위치 /etc/docker/daemon.json 내용 { &amp;#34;data-root&amp;#34;: &amp;#34;/where/you/want&amp;#34; }</description>
    </item>
    
    <item>
      <title>Docker 다이어트</title>
      <link>https://tramamte.github.io/2019/01/25/diet/</link>
      <pubDate>Fri, 25 Jan 2019 12:50:00 +0900</pubDate>
      
      <guid>https://tramamte.github.io/2019/01/25/diet/</guid>
      <description>Prune $ docker image prune $ docker container prune $ docker volume prune $ docker network prune Workaround Image $ docker rmi $(docker images --filter &amp;#34;dangling=true&amp;#34; -q --no-trunc) $ docker rmi $(docker images | grep &amp;#34;none&amp;#34; | awk &amp;#39;/ / { print $3 }&amp;#39;) Container $ docker rm $(docker ps -qa --no-trunc --filter &amp;#34;status=exited&amp;#34;) Volume $ docker volume rm $(docker volume ls -qf dangling=true) $ docker volume ls -qf dangling=true</description>
    </item>
    
    <item>
      <title>Docker 동시 다운로드 개수 조절</title>
      <link>https://tramamte.github.io/2018/08/29/docker-pull/</link>
      <pubDate>Wed, 29 Aug 2018 20:46:30 +0900</pubDate>
      
      <guid>https://tramamte.github.io/2018/08/29/docker-pull/</guid>
      <description>docker pull 명령으로 이미지를 다운로드하면 기본적으로 동시에 3개의 파일을 동시에 내려받는다. 그런데 네트워크 환경이 좋지 않거나 대역폭이 제한돼 있으면 종종 타임아웃</description>
    </item>
    
    <item>
      <title>Docker container 로그 보기</title>
      <link>https://tramamte.github.io/2018/06/26/docker-log/</link>
      <pubDate>Tue, 26 Jun 2018 12:49:25 +0900</pubDate>
      
      <guid>https://tramamte.github.io/2018/06/26/docker-log/</guid>
      <description>컨테이너 내 프로세스가 STDOUT, STDERR로 출력하는 로그 확인 $ docker logs --help Usage: docker logs [OPTIONS] CONTAINER Fetch the logs of a container Options: --details Show extra details provided to logs -f, --follow Follow log output --help Print usage --since string Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for</description>
    </item>
    
    <item>
      <title>Docker host - container 간 복사</title>
      <link>https://tramamte.github.io/2018/06/20/docker-copy/</link>
      <pubDate>Wed, 20 Jun 2018 23:15:37 +0900</pubDate>
      
      <guid>https://tramamte.github.io/2018/06/20/docker-copy/</guid>
      <description>$ docker cp --help Usage: docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|- docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH Copy files/folders between a container and the local filesystem Options: -L, --follow-link Always follow symbol link in SRC_PATH --help Print usage 현재 사용하고 있는 docker 버전은 17.05.0-ce인데 18.03 버전 기준의 docker doc</description>
    </item>
    
    <item>
      <title>Docker container에서 image 생성</title>
      <link>https://tramamte.github.io/2018/05/31/make-image-from-container/</link>
      <pubDate>Thu, 31 May 2018 12:55:14 +0900</pubDate>
      
      <guid>https://tramamte.github.io/2018/05/31/make-image-from-container/</guid>
      <description>개인적으로 Docker는 이것 저것 다양한 언어나 도구들을 시험하는 용도로도 많이 사용한다. 새로운 것을 보면 한 번 설치해 사용해 본 후 삭제하는 경우도 많은데, 흔</description>
    </item>
    
    <item>
      <title>Docker Root Directory 변경</title>
      <link>https://tramamte.github.io/2018/05/31/docker-change-root/</link>
      <pubDate>Thu, 31 May 2018 12:49:28 +0900</pubDate>
      
      <guid>https://tramamte.github.io/2018/05/31/docker-change-root/</guid>
      <description>Docker blog에 있는 내용에 따라 Ubuntu에 apt repository를 추가하고 Docker를 설치한 경우 image나 container 등이 저장되는 기본 경로는 /var</description>
    </item>
    
  </channel>
</rss>